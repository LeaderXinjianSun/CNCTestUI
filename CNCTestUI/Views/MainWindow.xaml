<Window
    x:Class="CNCTestUI.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:CNCTestUI.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    Width="1024"
    Height="768"
    prism:ViewModelLocator.AutoWireViewModel="True"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding AppLoadedEventCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding AppClosedEventCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Title>
        <MultiBinding StringFormat="{}{0} v{1}">
            <Binding Path="Title" />
            <Binding Path="Version" />
        </MultiBinding>
    </Window.Title>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <Menu VerticalAlignment="Center">

            <MenuItem
                Command="{Binding MenuCommand}"
                CommandParameter="1"
                Header="轴" />
        </Menu>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid>

                <local:AxisView Visibility="{Binding AxisViewVisibility}" />
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <GroupBox Header="操作">
                    <WrapPanel>
                        <WrapPanel.Resources>
                            <Style x:Key="OperateButtonBase" TargetType="Button">
                                <Setter Property="Width" Value="60" />
                                <Setter Property="Height" Value="60" />
                                <Setter Property="FontSize" Value="22" />
                                <Setter Property="Margin" Value="2" />
                            </Style>
                            <Style
                                x:Key="BusyButton"
                                BasedOn="{StaticResource OperateButtonBase}"
                                TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAxisBusy}" Value="true">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </WrapPanel.Resources>
                        <Button
                            Command="{Binding OperateButtonCommand}"
                            CommandParameter="0"
                            Content="开始"
                            Style="{StaticResource BusyButton}" />
                        <Button
                            Command="{Binding OperateButtonCommand}"
                            CommandParameter="1"
                            Content="停止"
                            Style="{StaticResource OperateButtonBase}" />
                        <Button
                            Command="{Binding GrabTriggerCommand}"
                            Content="触发"
                            Style="{StaticResource OperateButtonBase}" />
                    </WrapPanel>
                </GroupBox>
                <GroupBox Grid.Row="1" Header="信息">
                    <TextBox
                        x:Name="MsgTextBox"
                        Margin="1"
                        VerticalAlignment="Stretch"
                        HorizontalContentAlignment="Left"
                        VerticalContentAlignment="Top"
                        AcceptsReturn="True"
                        Background="Black"
                        FontFamily="宋体"
                        FontSize="14"
                        Foreground="White"
                        IsReadOnly="True"
                        Text="{Binding MessageStr}"
                        TextChanged="MsgTextBox_TextChanged"
                        TextWrapping="Wrap"
                        VerticalScrollBarVisibility="Auto" />
                </GroupBox>
            </Grid>
        </Grid>
        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="轴卡" />
                    <Ellipse Width="15" Height="15">
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AxisCardConnectState}" Value="true">
                                        <Setter Property="Fill" Value="Green" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding AxisCardConnectState}" Value="false">
                                        <Setter Property="Fill" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <TextBlock Text="{Binding X_Tool, StringFormat='X1:{0:F3} ', FallbackValue=X1:0.000&#160;}" />
                    <TextBlock Text="{Binding Y_Tool, StringFormat='Y1:{0:F3} ', FallbackValue=Y1:0.000&#160;}" />
                    <TextBlock Text="{Binding X_Enc, StringFormat='X:{0:F3} ', FallbackValue=X:0.000&#160;}" />
                    <TextBlock Text="{Binding Y_Enc, StringFormat='Y:{0:F3} ', FallbackValue=Y:0.000&#160;}" />
                    <TextBlock Text="{Binding Z_Enc, StringFormat='Z:{0:F3} ', FallbackValue=Z:0.000&#160;}" />
                    <TextBlock Text="{Binding R_Enc, StringFormat='R:{0:F3} ', FallbackValue=R:0.000&#160;}" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
